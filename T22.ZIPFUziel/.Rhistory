6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   0,
6,    1,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   0,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   10,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
bla
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   10,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
blal$summary
blal$results
blal$results$ICC[,1]
blal$results$ICC[1]
blal$results$ICC
blal$results
blal$lme
blal$MSW
blal$stats
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   10,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf, type = c("ICC1"))
blal$results
blal$stats
blal <- ICC(sf, lmer = F)
blal$results
blal$stats
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
X <- hilbert(9)[, 1:6]
(s <- svd(X))
D <- diag(s$d)
s$u %*% D %*% t(s$v) #  X = U D V'
t(s$u) %*% X %*% s$v #  D = U' X V
unlink(tempTest, recursive = T)
files <- list.files(full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files(full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
setwd("c://Users/james/PROJETOS/RII/T22.ZIPFUziel/")
files <- list.files(full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
View(files)
files <- list.files(full.names = F, include.dirs = F,
recursive = T)#, pattern = "docx")
View(files)
files <- list.files(all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
setwd("c://Users/james/PROJETOS/RII/T22.ZIPFUziel/")
tempDir = tempfile()
tempDir.data.tar <- paste(tempDir,"usielCarneiro.tar.gz", sep = "/" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
untar(tempDir.data.tar)
files <- list.files(tempDir, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files(path = tempDir, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files(path = tempDir)#, all.files=T, full.names = F, include.dirs = F,
files <- list.files(path = tempDir #, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files(path = tempDir) #, all.files=T, full.names = F, include.dirs = F,
files <- list.files(path = tempDir) #, all.files=T, full.names = F, include.dirs = F,
files <- list.files( tempDir) #, all.files=T, full.names = F, include.dirs = F,
tempDir.data.tar <- paste(tempDir,"usielCarneiro.tar.gz", sep = "\\" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
tempDir = tempfile()
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
tempDir = tempfile()
tempDir.data.tar <- paste(tempDir,"usielCarneiro.tar.gz", sep = "\\" )
tempDir = tempfile()
tempDir.data.tar <- paste(tempDir,"usielCarneiro.tar.gz", sep = "\\" )
tempDir.data.tar
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
write.table(c("gato "), paste(tempDir,"saida.txt",sep"/"),row.names = F, col.names = F)
write.table(c("gato "), paste(tempDir,"saida.txt",sep= "/"),row.names = F, col.names = F)
setwd("c://Users/james/PROJETOS/RII/T22.ZIPFUziel/")
tempDir = tempfile()
tempDir.data.tar <- paste(tempDir,"usielCarneiro.tar.gz", sep = "\\" )
write.table(c("gato "), paste(tempDir,"saida.txt",sep= "/"),row.names = F, col.names = F)
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
tempDir = tempfile()
library(SnowballC)
library(lsa)
library(textreadr)
tempDir = tempfile()
tempDire = tempfile()
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "\\" )
write.table(c("gato "), paste(tempDir,"saida.txt",sep= "/"),row.names = F, col.names = F)
setwd("c://Users/james/PROJETOS/RII/T22.ZIPFUziel/")
tempDire = tempfile()
dir.create(tempTest)
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "\\" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
tempDire = tempfile()
dir.create(tempDire)
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "\\" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDir.data.tar)
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "/" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDire.data.tar)
untar(tempDire.data.tar)
files <- list.files( tempDir, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files( tempDire, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files( path = tempDire, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files( path = tempDire)
files <- list.files( path = tempDire, all.files=T, full.names = F)
files <- list.files(tempDire, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
files <- list.files(tempDire, all.files=T, full.names = F, include.dirs = T,
recursive = T, pattern = "docx")
files <- list.files(tempDire, all.files=T, full.names = F, include.dirs = T,
recursive = T, pattern = "docx")
library(SnowballC)
library(lsa)
library(textreadr)
setwd("c://Users/james/PROJETOS/RII/T22.ZIPFUziel/")
tempDire = tempfile()
dir.create(tempDire)
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "/" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDire.data.tar)
untar(tempDire.data.tar)
files <- list.files(all.files=T, full.names = F, include.dirs = T,
recursive = T, pattern = "docx")
untar(tempDire.data.tar, exdir= tempDire)
files <- list.files(tempdire, all.files=T, full.names = F, include.dirs = T,
recursive = T, pattern = "docx")
files <- list.files(tempDire, all.files=T, full.names = F, include.dirs = T,
recursive = T, pattern = "docx")
write.table(files, "saida.txt",row.names = F, col.names = F)
lista.files <- list.files(tempDire, all.files=T, full.names = F, include.dirs = T,
recursive = T, pattern = "docx")
print()
print(arquivo)
for (arquivo in lista.files) {
print(arquivo)
}
lista.files <- list.files(tempDire, all.files=T, full.names = T, include.dirs = T,
recursive = T, pattern = "docx")
for (arquivo in lista.files) {
print(arquivo)
}
lista.files.names <- list.files(tempDire, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
write.table(lista.files.names, "saida.txt",row.names = F, col.names = F)
for (ix in 1:nrow(lista.files)) {
print(lista.files.names[ix])
}
lista.files <- list.files(tempDire, all.files=T, full.names = T, include.dirs = T,
recursive = T, pattern = "docx")
print(lista.files[ix])
for (ix in 1:nrow(lista.files)) {
print(lista.files[ix])
}
nrow(lista.files)
for (ix in 1:ncol(lista.files)) {
print(lista.files[ix])
}
ncol(lista.files)
length(lista.files)
for (ix in 1:length(lista.files)) {
print(lista.files[ix])
}
for (ix in 1:length(lista.files)) {
txt <- read_docx(lista.files[ix])
nomeArquivo <- paste("output", paste(ix,".txt", sep = ""), sep = "/")
write( txt, file=nomeArquivo)
}
for (ix in 1:length(lista.files)) {
try({
txt = read_docx(lista.files[ix])
nomeArquivo = paste("output", paste(ix,".txt", sep = ""), sep = "/")
write( txt, file=nomeArquivo)
})
}
dados.matrix = textmatrix("output", minWordLength = 1)
print(dados.matrix)
dados.matrix = textmatrix("output", minWordLength = 1)
print(dados.matrix)
arquivos.convertidos <- list.files("output")
arquivos.convertidos <- list.files("output",  full.names = T)
library(tm)
reut21578 <- system.file("texts", "crude", package = "tm")
VCorpus(DirSource(reut21578, mode = "binary"),
list(reader = readReut21578XMLasPlain))
reut21578
matrix <- VCorpus(DirSource(arquivos.convertidos),
readerControl = list(reader = ozielDocuments))
matrix <- VCorpus(DirSource("output"),
readerControl = list(reader = ozielDocuments))
matrix <- VCorpus(DirSource("output"))
dtm <- DocumentTermMatrix(matrix)
inspect(dtm)
data.corpus <- VCorpus(DirSource("output"))
matrix.dtm <- DocumentTermMatrix(matrix)
inspect(matrix.dtm)
tabela<- inspect(matrix.dtm)
library(dplyr)
library(tidytext)
ap_td <- tidy(data.corpus)
View(ap_td)
install.packages("rtika", dependencies = T)
library(rtika)
tika_text(lista.files)
rtika::install_tika()
ap_td %>% unnest_tokens(word, text)
dados.token <- ap_td %>% unnest_tokens(word, text)
dados.tf
dados.token <- ap_td %>% unnest_tokens(word, text)
dados.tf <- dados.token %>% group_by(word)
dados.tf
dados.tf <- dados.token%>% count(word) %>% group_by(id)
dados.tf <- dados.token%>% count(word) %>% group_by(word)
dados.tf
dados.tf <- dados.token%>% count(word,sort = T)
dados.tf
dados.tf <- dados.token%>% count(word,sort = T) %>% group_by(id)
dados.tf <- dados.token %>% group_by(id, word) %>% count(word , sort = T)
dados.tf
dados.token <- ap_td %>% unnest_tokens(word, text) %>% count(id, word , sort = T)
dados.token
dados.token <- ap_td %>% unnest_tokens(word, text) %>% count(id, word , sort = T) %>% ungroup()
dados.token
dodos.totalwods <- dados.token %>% group_by(id) %>% summarise(total = sum(n))
dodos.totalwods
dados.token <- left_join(dados.token, dodos.totalwods)
dados.token
dados.rank <- dados.token %>% group_by(id) %>% mutate(rank = row_number(), TF = n/total)
dados.rank
plot(dados.rank$TF)
plot(dados.rank~dados.rank$TF)
plot(dados.rank~dados.rank$TF)
plot(dados.rank$rank~dados.rank$TF)
plot(dados.rank$TF~dados.rank$rank)
plot(dados.rank$TF~dados.rank$rank, col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.rank
tika_text(lista.files)
library(dplyr)
library(tidytext)
dados.td <- tidy(data.corpus)
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
dados.totalwods <- dados.token %>%
group_by(id) %>%
summarise(total = sum(n))
dados.token <- left_join(dados.token, dados.totalwods)
dados.rank <- dados.token %>%
group_by(id) %>%
mutate(rank = row_number(), TF = n/total)
plot(dados.rank$TF~dados.rank$rank, col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.token
library(tidyr)
colnames(dados.totalwods) <- c("documentos","tokens", "n")
colnames(dados.token) <- c("documentos","tokens", "n")
dados.totalwods <- dados.token %>%
group_by(documentos) %>%
summarise(total = sum(n))
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
colnames(dados.token) <- c("documentos","tokens", "n")
dados.totalwods <- dados.token %>%
group_by(documentos) %>%
summarise(total = sum(n))
dados.token <- left_join(dados.token, dados.totalwods)
dados.matrix <- spread(dados.token, documentos, tokens )
dados.matrix <- spread(dados.token, documentos, tokens )
dados.matrix <- spread(dados.token, documentos, n )
View(dados.matrix)
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
colnames(dados.token) <- c("documentos","tokens", "n")
dados.matrix <- spread(dados.token, documentos, n )
View(dados.matrix)
dados.matrix$total <- dados.matrix(dados[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log2(dados.matrix$total)
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix$total <- dados.matrix(dados[2:ncol(dados.matrix)])
dados.matrix$total <- rowSums(dados[2:ncol(dados.matrix)])
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log2(dados.matrix$total)
plot(dados.matrix$TF , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
plot(dados.matrix$TF , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix <- spread(dados.token, tokens, n )
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log2(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
plot(dados.matrix$TF , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log2(dados.matrix$total)
dados.matrix$TF <- dados.matrix$total
dados.matrix$TF <- dados.matrix$total
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
plot(dados.matrix$TF , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix$TF <- n/dados.matrix$total
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.rank <- dados.matrix %>%
group_by(tokens) %>%
mutate(rank = row_number())
plot(dados.matrix$TF , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF~dados.rank$rank , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.rank$TF~dados.rank$rank , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix$rank <- row_number()
dados.matrix$rank <- 1:nrow(dados.matrix)
plot(dados.matrix$TF~dados.matrix$rank , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log2(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
plot(dados.matrix$TF~dados.matrix$rank , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
View(dados.matrix)
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix[is.na(dados.matrix)] <- 0
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log2(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
plot(dados.matrix$TF~dados.matrix$rank , col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF~dados.matrix$rank ,
ylab = "Frequencia de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF~dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix[is.na(dados.matrix)] <- 0
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)])
dados.matrix$TF <- 1 + log(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
plot(dados.matrix$TF~dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$total~dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF~dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix$TF <- 1 + log2(dados.matrix$total)
plot(dados.matrix$TF~dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)] > 0 )
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix[is.na(dados.matrix)] <- 0
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)] > 0 )
dados.matrix$TF <- 1 + log(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos",
xlab = "Rank",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
lines(dados.matrix$TF ~ dados.matrix$rank)
lines(dados.matrix$TF ~ dados.matrix$rank, type = 2)
lines(dados.matrix$TF ~ dados.matrix$rank, type = "2")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
lines(dados.matrix$TF ~ dados.matrix$rank, type = "2")
lines(dados.matrix$TF ~ dados.matrix$rank, type = "c")
lines(dados.matrix$TF ~ dados.matrix$rank, type = "o")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
lines(dados.matrix$TF ~ dados.matrix$rank, type = "o")
linha <- lm(dados.matrix$TF ~ dados.matrix$rank)
lines(linha)
linha <- lm(dados.matrix$TF ~ dados.matrix$rank)
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
lines(linha)
abline(linha, lwd=2, col="red")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(dados.matrix$TF ~ dados.matrix$rank, lwd=2, col="red")
abline(dados.matrix$TF ~ dados.matrix$rank, lwd=2, col="red")
linha <- lm.fit(dados.matrix$TF ~ dados.matrix$rank)
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd=2, col="red")
linha <- lm(dados.matrix$TF ~ dados.matrix$rank)
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia de Termos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd=2, col="red")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia em documentos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd = 2, col="red")
jpeg("zipf_resulta.jpg")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia em documentos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd = 2, col="red")
dev.off()
dir.create("output2")
