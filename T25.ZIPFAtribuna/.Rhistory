install.packages("tidytext")
install.packages("dplyr")
install.packages("tidyr")
sf <- matrix(c(9,    2,   5,    8,
6,    1,   3,    2,
8,    4,   6,    8,
7,    1,   2,    6,
10,   5,   6,    9,
6,   2,   4,    7),ncol=4,byrow=TRUE)
colnames(sf) <- paste("J",1:4,sep="")
rownames(sf) <- paste("S",1:6,sep="")
sf  #example from Shrout and Fleiss (1979)
ICC(sf)
install.packages("psych")
library(psych)
ICC(sf)
library(psych)
sf <- matrix(c(9,    2,   5,    8,
6,    1,   3,    2,
8,    4,   6,    8,
7,    1,   2,    6,
10,   5,   6,    9,
6,   2,   4,    7),ncol=4,byrow=TRUE)
colnames(sf) <- paste("J",1:4,sep="")
rownames(sf) <- paste("S",1:6,sep="")
sf  #example from Shrout and Fleiss (1979)
ICC(sf)
install.packages("KappaGUI")
library(psych)
sf <- matrix(c(9,    2,   5,    8,
6,    1,   3,    2,
8,    4,   6,    8,
7,    1,   2,    6,
10,   5,   6,    9,
6,   2,   4,    7),ncol=4,byrow=TRUE)
colnames(sf) <- paste("J",1:4,sep="")
rownames(sf) <- paste("S",1:6,sep="")
sf  #example from Shrout and Fleiss (1979)
ICC(sf)
install.packages("KappaGUI", dependencies = T)
install.packages("psych", dependencies = T)
install.packages("psych", dependencies = T)
library(psych)
sf <- matrix(c(9,    2,   5,    8,
6,    1,   3,    2,
8,    4,   6,    8,
7,    1,   2,    6,
10,   5,   6,    9,
6,   2,   4,    7),ncol=4,byrow=TRUE)
colnames(sf) <- paste("J",1:4,sep="")
rownames(sf) <- paste("S",1:6,sep="")
sf  #example from Shrout and Fleiss (1979)
ICC(sf)
sf  #example from Shrout and Fleiss (1979)
blal <- ICC(sf)
View(blal)
blal
library(psych)
sf <- matrix(c(9,    2,   5,    8,
6,    1,   3,    2,
8,    4,   6,    8,
7,    1,   2,    6,
10,   5,   6,    9,
6,   2,   4,    7),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    9,
5,    5,
6,    6,
3,    3,
8,    8,
6,    6,
7,    7,
2,    2,
10,   10,
6,    9,
6,   2,
4,    7),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    9,
5,    5,
6,    6,
3,    3,
8,    8,
6,    6,
7,    7,
2,    2,
10,   10,
6,    6,
6,    6,
4,    4),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    9,
5,    5,
6,    6,
3,    3,
8,    8,
6,    6,
7,    7,
2,    2,
10,   10,
6,    6,
6,    3,
4,    4),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   0,
6,    0,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   0,
6,    1,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   0,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   10,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
bla
blal
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   10,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf)
blal
blal$summary
blal$results
blal$results$ICC[,1]
blal$results$ICC[1]
blal$results$ICC
blal$results
blal$lme
blal$MSW
blal$stats
library(psych)
sf <- matrix(c(9,    0,
5,    0,
6,    0,
3,    0,
8,    0,
6,    0,
7,    0,
2,    0,
10,   10,
6,    6,
6,    0,
4,    0),ncol=2,byrow=TRUE)
colnames(sf) <- paste("J",1:2,sep="")
rownames(sf) <- paste("S",1:12,sep="")
blal <- ICC(sf, type = c("ICC1"))
blal$results
blal$stats
blal <- ICC(sf, lmer = F)
blal$results
blal$stats
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
X <- hilbert(9)[, 1:6]
(s <- svd(X))
D <- diag(s$d)
s$u %*% D %*% t(s$v) #  X = U D V'
t(s$u) %*% X %*% s$v #  D = U' X V
library(corrplot)
notas <- data.frame(aval1 = c(1,2,3,4),
aval2 = c(6,7,8,9))
dados.cor <- cor(notas, method = "pearson")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
install.packages("corrplot")
library(corrplot)
notas <- data.frame(aval1 = c(1,2,3,4),
aval2 = c(6,7,8,9))
dados.cor <- cor(notas, method = "pearson")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
notas <- data.frame(aval1 = c(1,2,3,4),
aval2 = c(2,3,4,5),
aval3 = c(5,5,1,3))
dados.cor <- cor(notas, method = "pearson")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
notas <- data.frame(aval1 = c(1,2,3,4),
aval2 = c(2,3,4,5),
aval3 = c(5,5,1,3))
library(corrplot)
notas <- data.frame(aval1 = c(1,2,3,4),
aval2 = c(2,3,4,5),
aval3 = c(5,5,1,3))
rownames(notas) <- c("C1","C2","C3","C4")
dados.cor <- cor(notas, method = "pearson")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
View(nota)
View(notas)
library(corrplot)
notas <- data.frame(aval1 = c(1,2,3,4),
aval2 = c(2,3,4,5),
aval3 = c(5,5,1,3))
rownames(notas) <- c("a1","a2","a3","a4")
View(notas)
dados.cor <- cor(notas, method = "kendal")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
library(psych)
t <- ICC(notas)
t$results
t <- ICC(notas[1:2])
t$results
install.packages("irr")
############## Estimacao de concordancia #########################
library(irr)
agree(notas)
notas <- data.frame(aval1 = c(1,2,3,4),
aval4 = c(1,2,3,4),
aval2 = c(2,3,4,5),
aval3 = c(5,5,1,3))
rownames(notas) <- c("a1","a2","a3","a4")
View(notas)
dados.cor <- cor(notas, method = "kendal")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
agree(notas)
agree(notas[1:2], tolerance=0)
agree(notas[1:3], tolerance=0)
agree(notas[2:3], tolerance=0)
agree(notas[3:4], tolerance=0)
agree(notas[3:4], tolerance=0)
notas <- data.frame(aval1 = c(1,2,3,4),
aval4 = c(1,2,3,4),
aval2 = c(2,3,4,4),
aval3 = c(5,5,1,3))
rownames(notas) <- c("a1","a2","a3","a4")
agree(notas[3:4], tolerance=0)
agree(notas[3:4], tolerance=1)
notas[3:4]
agree(notas[2:3], tolerance=1)
agree(notas[2:3], tolerance=0)
kappa2(notas)
kappa2(notas[2:3])
kappa2(notas[1:2])
concordancia <- agree(notas[2:3], tolerance=0)
View(concordancia)
concordancia$value
library(corrplot)
notas <- data.frame(aval1 = c(0,50,70),
aval2 = c(50,70,100),
aval3 = c(70,50,0))
rownames(notas) <- c("a1","a2","a3","a4")
View(notas)
dados.cor <- cor(notas, method = "kendal")
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.8)
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.15)
corrplot.mixed(dados.cor, lower.col = "black",
number.cex =.5 , upper = "color", tl.cex =.9)
library(SnowballC)
library(lsa)
library(textreadr)
#setwd("c://Users/james/PROJETOS/RII/T22.ZIPFUziel/")
tempDire = tempfile()
dir.create(tempDire)
dir.create("output")
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "/" )
download.file("https://inf.ufes.br/~elias/dataSets/usielCarneiro.tar.gz", destfile = tempDire.data.tar)
untar(tempDire.data.tar, exdir= tempDire)
lista.files <- list.files(tempDire, all.files=T, full.names = T, include.dirs = T,
recursive = T, pattern = "docx")
lista.files.names <- list.files(tempDire, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "docx")
write.table(lista.files.names, "saida.txt",row.names = F, col.names = F)
for (ix in 1:length(lista.files)) {
try({
txt = read_docx(lista.files[ix])
nomeArquivo = paste("output", paste(ix,".txt", sep = ""), sep = "/")
write( txt, file=nomeArquivo)
})
}
library(tm)
arquivos.convertidos <- list.files("output",  full.names = T)
data.corpus <- VCorpus(DirSource("output"))
matrix.dtm <- DocumentTermMatrix(matrix)
library(dplyr)
library(tidytext)
library(tidyr)
dados.td <- tidy(data.corpus)
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
colnames(dados.token) <- c("documentos","tokens", "n")
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix[is.na(dados.matrix)] <- 0
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)] > 0 )
dados.matrix$TF <- 1 + log(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
linha <- lm(dados.matrix$TF ~ dados.matrix$rank)
jpeg("zipf_resulta.jpg")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia em documentos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd = 2, col="red")
dev.off()
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia em documentos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd = 2, col="red")
library(SnowballC)
library(lsa)
library(textreadr)
library(tm)
library(dplyr)
library(tidytext)
library(tidyr)
setwd("c://Users/james/PROJETOS/RII/T25.ZIPFAtribuna/")
tempDire = tempfile()
dir.create(tempDire)
tempDire.data.tar <- paste(tempDire,"usielCarneiro.tar.gz", sep = "/" )
download.file("http://www.inf.ufes.br/âˆ¼elias/dataSets/aTribuna-21dir.tar.gz", destfile = tempDire.data.tar)
untar(tempDire.data.tar, exdir= tempDire)
lista.files <- list.files(tempDire, all.files=T, full.names = T, include.dirs = T,
recursive = T, pattern = "txt")
lista.files.names <- list.files(tempDire, all.files=T, full.names = F, include.dirs = F,
recursive = T, pattern = "txt")
write.table(lista.files.names, "saida.txt",row.names = F, col.names = F)
data.corpus <- VCorpus(DirSource(tempDire, recursive = T, pattern = "txt"))
dados.td <- tidy(data.corpus)
dados.td2 <- tidy(data.corpus)
dados.td.all <- tidy(data.corpus)
dados.td <- sample_frac(dados.td.all, 100)
dados.td <- sample_frac(dados.td.all, .2)
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
rm(dados.td2)
rm(data.corpus)
colnames(dados.token) <- c("documentos","tokens", "n")
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix[is.na(dados.matrix)] <- 0
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)] > 0 )
dados.matrix$TF <- 1 + log(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
linha <- lm(dados.matrix$TF ~ dados.matrix$rank)
jpeg("zipf_resulta.jpg")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia em documentos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd = 2, col="red")
dev.off()
dados.td <- sample_frac(dados.td.all, .05)
dados.td <- sample_frac(dados.td.all, .025)
dados.token <- dados.td %>%
unnest_tokens(word, text) %>%
count(id, word , sort = T) %>%
ungroup()
colnames(dados.token) <- c("documentos","tokens", "n")
dados.matrix <- spread(dados.token, documentos, n )
dados.matrix[is.na(dados.matrix)] <- 0
dados.matrix$total <- rowSums(dados.matrix[2:ncol(dados.matrix)] > 0 )
dados.matrix$TF <- 1 + log(dados.matrix$total)
dados.matrix <- dados.matrix[order(-dados.matrix$TF),]
dados.matrix$rank <- 1:nrow(dados.matrix)
linha <- lm(dados.matrix$TF ~ dados.matrix$rank)
jpeg("zipf_resulta.jpg")
plot(dados.matrix$TF ~ dados.matrix$rank ,
ylab = "Frequencia em documentos (log2)",
xlab = "Rank de Termos",
col = "blue", pch = 19, cex = 1, lty = "solid", lwd = 2)
abline(linha, lwd = 2, col="red")
dev.off()
rm(dados.td, dados.matrix, dados.token, linha, lista.files, lista.files.names)
rm(dados.td, dados.matrix, dados.token, linha, lista.files,
lista.files.names, tempDire, tempDire.data.tar)
save("dados.Rdata")
save(dados.td.all, file = "data.Rdata")
rm(tempDire)
